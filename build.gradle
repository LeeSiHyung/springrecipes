plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.apress'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // implementation 'org.springframework.boot:spring-boot-starter-amqp'
    // implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    // implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    // implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    // implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    // implementation 'org.springframework.boot:spring-boot-starter-integration'
    // implementation 'org.springframework.boot:spring-boot-starter-security'
    // implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // implementation 'org.apache.kafka:kafka-streams'
    // implementation 'org.springframework.kafka:spring-kafka'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    // testImplementation 'io.projectreactor:reactor-test'
    // testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    // testImplementation 'org.springframework.kafka:spring-kafka-test'
    // testImplementation 'org.springframework.security:spring-security-test'

    compileOnly 'javax.inject:javax.inject:1'

    testImplementation 'org.springframework.integration:spring-integration-test'

    compileOnly 'org.springframework:spring-instrument:5.0.0.RELEASE'
    compileOnly 'org.springframework:spring-aspects'
    compileOnly 'org.springframework:spring-webmvc'


}

test {
    useJUnitPlatform()
}
